spring-boot-base-V1.0

spring boot 项目搭建
1.新建项目 
  1.1.手动创建或者官网(https://spring.io/projects/spring-boot/)下载

  1.2.内容包括：包结构、程序入口(xxApplication.java)、依赖包(pom.xml)、
   配置文件application.properties

  1.3.环境
   JDK1.8、springboot2.1.3（2.1.4以上版本差异太大）、mysql、maven project

  1.4.项目启动
    执行SpringBootBaseApplication.java的mian方法即可。

2.项目结构遵循MVC模式

3.springBoot集成mybatis + mysql
  通用接口(针对所有业务，在持久层提供通用增删改查接口)
  业务接口:mapper层方法签名不能与通用mapper接口相同

4.UserController为基本增删改查demo
 测试访问URL:
 http://localhost:8086/sys/user/listUser
 http://localhost:8086/sys/user/findById/13
 http://localhost:8086/sys/user/save?username=tanzxuhao
 http://localhost:8086/sys/user/update?userId=5&username=小米
 http://localhost:8086/sys/user/delete/1

5.乐观锁

6.项目部署
    resource/附件/SpringBoot项目部署文档.doc
7.数据库
  resource/附件/spring-boot-base-V1.0.sql
-------------------------------------------------------------------------------------
spring-boot-redis-V1.0

springboot集成redis

1.基于spring-boot-base-V1.0集成redis

2.redis安装包路径: 附件/redis64-2.8.12.zip
  
  redis连接密码：a123456，其他均为默认配置

  redis密码查看:redis.windows.conf文件下requirepass属性值

3.redis启动命令:

   cmd ---->d: ----cd D:\tools\redis64-2.8.12 ----> redis-server.exe  redis.windows.conf
  
   注意事项：redis cmd 窗口关闭，redis即关闭。启动方式可以优化成：将redis加到Windows服务中（详见百度）。

4.封装redis操作工具类 RedisHelperImpl
  
5.RedisController为redis基本增删改查demo

6.数据库表未发生变更
  resource/附件/spring-boot-base-V1.0.sql
-----------------------------------------------------------------------------------------
spring-boot-rabbitmq-V1.0

springboot集成rabbitMQ 初阶版

1.环境安装
  1.1.Erlang安装。
     安装程序：附件\Erlang安装程序\otp_win64_21.0.1.exe

  1.2.RabbitMQ安装包
     附件\rabbitmq-server-windows-3.7.7.zip

  1.3.安装文档
     附件\Erlang&RabbitMQ安装文档.docx

2.封装工具类RabbitMQConfig

3.发送和接受消息demo,消息发送包含3大基本路由策略:
  3.1.Direct类型(点对点模式)
    测试地址：http://localhost:8086/rabbitmq/direct

  3.2.Topic类型(主题模式)
     测试地址：http://localhost:8086/rabbitmq/topic

  3.3.Fanout类型(广播模式)
     测试地址:http://localhost:8086/rabbitmq/fanout

  3.4.header类型(头部模式)
    headers类型的Exchange(交换器)性能很差,使用率低，可忽略。

4.设置消费者prefetchCount

   4.1.限制queue每次发送给每个消费者的消费数

   4.2.核心代码:RabbitMQConfig.rabbitListenerContainerFactory(...)

5.RabbitMQ管理后台

 网址： http://localhost:15672

 用户名/密码: guest/guest

6.数据库未发生变更
   resource/附件/spring-boot-base-V1.0.sql

----------------------------------------------------------------------------------
spring-boot-rabbitmq-V2.0

springboot集成rabbitMQ 进阶版

1.重构生产者、消费、rabbitmq操作工具类
  1.1.对消费进行监听封装
  1.2.RabbitMQBaseConfig：通用配置类
      RabbitMQConfig:业务配置类

2.消息回执（message acknowledgment）
   即消息确认,确认消费者处理了消息，把消息从队列中移除

3.消息回调
  确认生产者消息发送成功,即成功把消息发送到exchange

4.可持久化(message durability)
  3.1.队列持久化
  3.2.消息持久化

5.prefetch count设置
  每次从一次性从broker里面取的待消费的消息的个数。
  例如:prefetchCount=1,即每个消费者每次会预取1个消息准备消费 
  
6.消费者处理消息失败后，消息重新入列，重复失败3次后，拒绝入列。

7.rabbitmq 百分之百消息送达策略
  4.1.队列持久化
  4.2.消息持久化
  4.3.设置prefetchcount
  4.4.生产者发送消息成功，进行回调处理      
  4.5.消费进行消息确认(ack)
  4.6.处理消息失败，循环处理，失败重复三次后,拒绝入列，失败消息入库，进行人工干预。

10.集成redis

 项目需要启动redis和rabbitmq
 
11.数据库未发生变更
  resource/附件/spring-boot-base-V1.0.sql
---------------------------------------------------------------------------------------------------------------
spring-boot-thymeleaf-V1.0

1.基于spring-boot-base-V1.0构建项目

2.spring boot集成thymeleaf模板作页面展示
   页面跳转demo
   localhost:8086/index

  静态资源直接访问demo
   http://localhost:8086/static/index-static.html
   http://localhost:8086/static/spring-boot-thymeleaf-V1.0版本说明.txt

3.数据库未发生变更
  resource/附件/spring-boot-base-V1.0.sql
 
-------------------------------------------------------------------------------------  
spring-boot-web-V1.0

spring boot集成thymeleaf模板、boostrap、angularJs

1.基于spring-boot-base-V1.0构建web项目

2.spring boot集成thymeleaf模板+bootstrap
  2.1. 简单demo:
   localhost:8086/site/

  2.2.thymeleaf详细使用:
   localhost:8086/student/index
   ........
   详见ThymeleafBoostrapController.java

3.spring boot集成angularJs+bootstrap
  页面可以增删改查
  首页访问地址:
  localhost:8086/angularIndex/index

3.数据库未发生变更
  resource/附件/spring-boot-base-V1.0.sql

---------------------------------------------------------------
spring-boot-security-web-V1.0

spring boot 集成 security

1.基于spring-boot-web-V1.0构建用户权限管理

  用户需要登录成功才能访问其他模块
  登录页：http://localhost:8086
  登录账号/密码:admin/admin,详见s_user表。

2.数据库表发生更改
 全量sql详见: resource/附件/spring_boot-security-web-V1.0全量.sql

---------------------------------------------------------------







